#include "stdlib.h"
#include "stdio.h"
#include "avr/io.h"

#define ADDR_TEMP_SENSOR 0x90

void initTwi();
void startTwi();
void sendTwi(uint8_t b);
uint8_t readTwi(uint8_t repeat);
void stopTwi();
uint8_t resultTwi();

int main()
{
	initTwi();
	
	while(1)
	{
		startTwi();
		sendTwi(ADDR_TEMP_SENSOR);
		sendTwi(0x00);
		startTwi();
		sendTwi(ADDR_TEMP_SENSOR + 1);
		uint8_t temp = readTwi(0);
		stopTwi();
	}
}

void initTwi()
{
	// input pullups
	PORTD |= (1<<0) | (1<<1);
	
	// twi speed
	TWBR = 8;
	
	// enable twi
	TWCR = (1<<TWEN);
}

void startTwi()
{
	// send start condition
	TWCR = (1<<TWEN) | (1<<TWSTA) | (1<<TWINT);
	while(!(TWCR & (1<<TWINT)));
}

void sendTwi(uint8_t b)
{
	// insert data into data register
	TWDR = b;
	
	// start transfer
	TWCR = (1<<TWEN) | (1<<TWINT);
	while(!(TWCR & (1<<TWINT)));
}

uint8_t readTwi(uint8_t repeat)
{
	// start transfer with or without acknowledgment
	TWCR = (1<<TWEN) | (1<<TWINT) | (repeat<<TWEA);
	while(!(TWCR & (1<<TWINT)));
	
	// return read data
	return TWDR;
}

void stopTwi()
{
	// send stop byte
	TWCR = (1<<TWSTO) | (1<<TWINT) | (1<<TWEN);
}

uint8_t resultTwi()
{
	return TWSR & 0xF8;
}
